# This example config shows multiple garage doors configured, each with different geofence and opener types
# Not all available options or parameter descriptions are shown here for simplicity;
# for all available options for a specific geofence or opener type, please
# refer to their respective example config files.

## NOTE ##
# Spacing is very important in this file, particularly the leading spacing (indentations). Failure to properly indent may cause config parsing to fail silently

global:
  tracker_mqtt_settings:
    connection: &mqtt_connection_settings
      host: localhost
      port: 1883
      client_id: tesla-geogdo
  cooldown: 5

garage_doors:
  - # main garage example
    geofence:
      type: circular
      settings:
        center:
          lat: 46.19290425661381
          lng: -123.79965087116439
        close_distance: .013
        open_distance: .04
    opener:  # defines how to control the garage
      type: ratgdo
      mqtt_settings:
        connection:
          host: localhost
          port: 1883
          client_id: tesla-geogdo-ratgdo1
          # WARNING!! client_id's MUST BE UNIQUE for any mqtt client that shares a broker !!
        topic_prefix: home/garage/Main
    trackers: # defines which trackers should be used to operate garage; list of trackers includes an arbitrary (but unique) id and topic definitions to retrieve latitude and longitude
      - id: 1 # required, some identifier, can be number or string
        lat_topic: teslamate/cars/1/latitude # topic to retrieve latitude for tracker
        lng_topic: teslamate/cars/1/longitude # topic to retrieve longitude for tracker
      - id: 2 # required, some identifier, can be number or string
        lat_topic: teslamate/cars/2/latitude # topic to retrieve latitude for tracker
        lng_topic: teslamate/cars/2/longitude # topic to retrieve longitude for tracker

  - # 3rd car garage example
    geofence:
      type: teslamate
      settings:
        close_trigger:
          from: home
          to: not_home
        open_trigger:
          from: not_home
          to: home
    opener:  # defines how to control the garage
      type: mqtt
      settings:
        connection:
          <<: *mqtt_connection_settings # optional, reference the yaml anchor from the global.teslamate_mqtt_settings to use the same values here, and override the client_id below
          client_id: tesla-geogdo-mqtt-opener
          # WARNING!! client_id's MUST BE UNIQUE for any mqtt client that shares a broker !!
        topics:
          prefix: home/garage/3rdCar
          door_status: status/door
        commands:
          - name: open
            payload: open
            topic_suffix: command/door
            required_start_state: closed
            required_finish_state: open
          - name: close
            payload: close
            topic_suffix: command/door
            required_start_state: open
            required_finish_state: closed
    trackers: # defines which trackers should be used to operate garage; list of trackers includes an arbitrary (but unique) id and topic definitions to retrieve latitude and longitude
      - id: 3 # required, some identifier, can be number or string
        lat_topic: teslamate/cars/3/latitude # topic to retrieve latitude for tracker
        lng_topic: teslamate/cars/3/longitude # topic to retrieve longitude for tracker

  - # 4th car detached garage example
    geofence:
      type: polygon
      settings:
        kml_file: ../../resources/polygon_map.kml
    opener:  # defines how to control the garage
      type: http
      settings:
        connection:
          host: localhost
          port: 80
        status:
            endpoint: /status
        commands:
          - name: open
            endpoint: /command
            http_method: post
            body: '{ "command": "open" }'
            required_start_state: closed
            required_finish_state: open
          - name: close
            endpoint: /close
            http_method: post
            body: 
            required_start_state: open
            required_finish_state: closed
    trackers: # defines which trackers should be used to operate garage; list of trackers includes an arbitrary (but unique) id and topic definitions to retrieve latitude and longitude
      - id: 4 # required, some identifier, can be number or string
        complex_topic: # if lat and lng are published to a single topic via json payload, use this instead of lat_topic and lng_topic
          topic: some/complex/topic
          lat_json_key: lat # json key for latitude; only top-level json keys are supported, cannot be nested within other json keys
          lng_json_key: lng # json key for longitude; only top-level json keys are supported, cannot be nested within other json keys
