# This is an example config file with all available options and explanations for circular geofence and homeassistant opener types.

## NOTE ##
# Spacing is very important in this file, particularly the leading spacing (indentations). Failure to properly indent may cause config parsing to fail silently

global:
  tracker_mqtt_settings: # settings for tracker mqtt broker
    connection:
      host: localhost # dns, container name, or IP of tracker mqtt host
      port: 1883
      client_id: tesla-geogdo # optional, arbitrary client name for MQTT connection; must not be the same as any other MQTT client name, will use random uuid if omitted
      user: mqtt_user # optional, only define if your mqtt broker requires authentication, can also be passed as env var MQTT_USER
      pass: mqtt_pass # optional, only define if your mqtt broker requires authentication, can also be passed as env var MQTT_PASS
      use_tls: false # optional, instructs app to connect to mqtt broker using tls (defaults to false)
      skip_tls_verify: false # optional, if use_tls = true, this option indicates whether the client should skip certificate validation on the mqtt broker
  cooldown: 5 # minutes to wait after operating garage before allowing another garage operation (set to 0 or omit to disable)

garage_doors:
  - # main garage example
    geofence: # circular geofence with a center point, open and close distances (radii)
      type: circular
      settings:
        center:
          lat: 46.19290425661381
          lng: -123.79965087116439
        close_distance: .013 # distance in kilometers car must travel away from garage location to close garage door
        open_distance: .04 # distance in kilometers car must be in range of garage location while traveling closer to it to open garage door
    opener:  # defines how to control the garage # defines how to control the garage
      type: homeassistant # type of garage door opener to use
      settings:
        connection: # connection settings for home assistant
          host: homeassistant.local # dns, container name, or IP of home assistant
          port: 8123
          api_key: long_api_key # api key for home assistant; generate in user profile
          use_tls: false # optional, instructs app to connect to home assistant using tls (defaults to false)
          skip_tls_verify: false # optional, if use_tls = true, this option indicates whether the client should skip certificate validation on home assistant
        entity_id: cover.main_door # id for the garage door entity in home assistant, can be found by adding '/config/entities' to the base url in home assistant
        enable_status_checks: true # set to true if gdo supports garage states (e.g. garage is closed)
    trackers: # defines which trackers should be used to operate garage; list of trackers includes an arbitrary (but unique) id and topic definitions to retrieve latitude and longitude
      - id: 1 # required, some identifier, can be number or string
        lat_topic: teslamate/cars/1/latitude # topic to retrieve latitude for tracker
        lng_topic: teslamate/cars/1/longitude # topic to retrieve longitude for tracker
      - id: 2 # required, some identifier, can be number or string
        complex_topic: # if lat and lng are published to a single topic via json payload, use this instead of lat_topic and lng_topic
          topic: some/complex/topic
          lat_json_key: lat # json key for latitude; only top-level json keys are supported, cannot be nested within other json keys
          lng_json_key: lng # json key for longitude; only top-level json keys are supported, cannot be nested within other json keys
